import torch
import numpy as np

# 원소의 수를 유지하면서 텐서의 크기 변경
t = np.array([[[0, 1, 2], [3, 4, 5]],
              [[6, 7, 8], [9, 10, 11]]])
ft = torch.FloatTensor(t)

print(ft.shape)

print(ft.view([-1, 3])) # ft라는 텐서를 (?, 3)의 크기로 변경
'''
view([-1, 3])에서 -1은 첫번째 차원은 사용자가 잘 모르겠으니 파이토치에 맡기겠다는 의미
3은 두번째 차원의 길이는 3을 가지도록 하라는 의미

변경 전 텐서의 원소의 수는 (2 × 2 × 3) = 12 이다 
변경후 텐서의 원소의 개수 또한 (4 x 3) = 12 이다
'''
print(ft.view([-1, 3]).shape)

# view는 기본적으로 변경 전과 변경후 원소의 개수가 유지되어야 한다
# 파이토치의 view는 사이즈가 -1로 설정되면 다른 차원으로부터 해당 값을 유추한다


# 3차원 텐서의 크기 변경
print(ft.view([-1, 1, 3]))
print(ft.view([-1, 1, 3]).shape)
# (2 × 2 × 3) = (? × 1 × 3) = 12를 만족해야 함으로서 4가 된다






